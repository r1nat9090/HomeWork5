# 1. Создать программный файл в текстовом формате,
# записать в него построчно данные, вводимые пользователем.
# Об окончании ввода данных будет свидетельствовать пустая строка.

# with open('3.txt', 'w+', encoding = 'utf-8') as f:
#     f.write(input())
#     f.seek(0)
#     text = f.read()
#     print(text)

# 2. Создать текстовый файл (не программно), сохранить в нём несколько строк,
# выполнить подсчёт строк и слов в каждой строке.

# with open('1.txt', 'r', encoding = 'utf-8') as f:
#     count_lines = 0
#     count_words = 1
#     for line in f:
#         count_lines = count_lines + 1
#         for i in line:
#             if i == ' ':
#                 count_words = count_words + 1
#         print(count_words)
#         count_words = 1
#     print(count_lines)

# 3. Создать текстовый файл (не программно). Построчно записать фамилии сотрудников и величину их окладов (не менее 10 строк).
# Определить, кто из сотрудников имеет оклад менее 20 тысяч, вывести фамилии этих сотрудников.
# Выполнить подсчёт средней величины дохода сотрудников.
# Пример файла:
#
# Иванов 23543.12
# Петров 13749.32

# with open('Salary.txt', 'r', encoding = 'utf-8') as f:
#     summ = 0
#     count = 0
#     e = []
#     for line in f:
#         e = line.split()
#         for i in range(1, len(e)):
#             e[1] = float(e[1])
#             summ = summ + e[1]
#             count = count + 1
#     print('Средняя величина дохода сотрудников составляет: ', summ/count)
#
# with open('Salary.txt', 'r', encoding='utf-8') as q:
#     for line in q:
#         e = line.split()
#         for i in range(1, len(e)):
#             e[1] = float(e[1])
#             if e[1] < 20000:
#                 print("Сотрудник имеет оклад менее 20 тыс. руб: ", e[0])

# 4. Создать (не программно) текстовый файл со следующим содержимым:
# One — 1
# Two — 2
# Three — 3
# Four — 4
# Напишите программу, открывающую файл на чтение и считывающую построчно данные.
# При этом английские числительные должны заменяться на русские.
# Новый блок строк должен записываться в новый текстовый файл.

# replace = {'One': 'Один', 'Two': 'Два', 'Three': 'Три', 'Four': 'Четыре'}
# with open('4.txt', 'r', encoding='utf-8') as source, open('5.txt', 'w+', encoding = 'utf-8') as target:
#     for line in source:
#         for key, value in replace.items():
#             line = line.replace(key, value)
#         target.write(line)

# 5. Создать (программно) текстовый файл, записать в него программно набор чисел, разделённых пробелами.
# Программа должна подсчитывать сумму чисел в файле и выводить её на экран.

# with open('6.txt', 'w+', encoding = 'utf-8') as f:
#     summ = 0
#     f.write(input())
#     f.seek(0)
#     my_list = f.read().split()
#     for i in my_list:
#         i = int(i)
#         summ += i
#     print(summ)

# 6. Сформировать (не программно) текстовый файл. В нём каждая строка должна описывать учебный предмет и наличие лекционных,
# практических и лабораторных занятий по предмету. Сюда должно входить и количество занятий.
# Необязательно, чтобы для каждого предмета были все типы занятий.
# Сформировать словарь, содержащий название предмета и общее количество занятий по нему. Вывести его на экран.
# Примеры строк файла: Информатика: 100(л) 50(пр) 20(лаб).
# Физика: 30(л) — 10(лаб)
# Физкультура: — 30(пр) —
# Пример словаря: {“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}

# with open('Learning.txt', 'r') as f:
#     result = {}
#     for line in f:
#         subject, numbers = line.split(':')
#         subject_sum = sum(int(n) for word in numbers.split() for n in word.split('(') if n.isdigit())
#         result[subject] = subject_sum
#     print(result)

# 7. Создать вручную и заполнить несколькими строками текстовый файл, в котором каждая строка будет содержать данные о фирме: название, форма собственности, выручка, издержки.
# Пример строки файла: firm_1 ООО 10000 5000.
#
# Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль. Если фирма получила убытки, в расчёт средней прибыли её не включать.
# Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью. Если фирма получила убытки, также добавить её в словарь (со значением убытков).
# Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
#
# Итоговый список сохранить в виде json-объекта в соответствующий файл.
# Пример json-объекта:
# [{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
# Подсказка: использовать менеджер контекста.

# with open('Firm.txt', 'r') as f:
#     res = [] # Создание пустого списка
#     res_dict = {} # Создание пустого словаря
#     positive_profit_count = 0 # Счетчик компаний с положительным профитом
#     total_profit = 0 # Профит
#     for line in f:
#         firm, org, rev, exp = line[:].split() # Разделение строк на фирму, организацию, выручку и издержки из файла Firm.txt
#         profit = int(rev) - int(exp) # Формула для расчета профита по каждой строке
#         if profit > 0: # По условию задачи при расчете средней прибыли уботочные компании не учитывать
#             total_profit += profit # Расчет общего профита
#             positive_profit_count += 1 # Подсчет количества компаний с положительным профитом
#         res_dict[firm] = profit # Включение позиций в словарь, в том числе с отрицательным профитом (убытками)
#     avr_profit = total_profit / positive_profit_count if positive_profit_count else 0 # Расчет средней прибыли при условии наличия компаний с положительной прибыль, иначе профит 0
#     res.append(res_dict) # Добавление в список ранее созданного словаря
#     res.append({'average_profit': avr_profit}) # Добавление в список среднего профита в виде словаря
#
# import json # ипморт библиотеки json
# with open('my_file.json', 'w') as f: # Создание json файла
#     json.dump(res, f) # Импорт в json файл ранее созданного списка res
